# Generated by Django 4.2.15 on 2025-09-15 13:28

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DistrictSanitaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('geojson', models.JSONField(blank=True, null=True)),
                ('previous_rank', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=100, null=True)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default='+22507070707', max_length=20, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('job_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Titre du poste')),
                ('slug', models.SlugField(blank=True, editable=False, help_text='slug field', null=True, unique=True, verbose_name='slug ')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dash.districtsanitaire', verbose_name='District Sanitaire')),
            ],
            options={
                'permissions': (('access_all', 'access all'), ('access_region', 'access region'), ('access_district', 'access district'), ('can_assign_roles', 'Can assign roles to employees')),
            },
        ),
        migrations.CreateModel(
            name='PolesRegionaux',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSanitaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('upstream', models.CharField(blank=True, max_length=255, null=True)),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('source_url', models.URLField(blank=True, max_length=500, null=True)),
                ('completeness', models.CharField(blank=True, max_length=100, null=True)),
                ('uuid', models.UUIDField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('what3words', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dash.districtsanitaire')),
            ],
        ),
        migrations.CreateModel(
            name='TypeServiceSanitaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=500, null=True)),
                ('acronyme', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SyntheseActivites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_visite', models.IntegerField(blank=True, null=True, verbose_name='Total Visite')),
                ('total_recette', models.DecimalField(blank=True, decimal_places=2, max_digits=22, null=True, verbose_name='Total Recette')),
                ('total_recouvrement', models.DecimalField(blank=True, decimal_places=2, max_digits=22, null=True, verbose_name='Total Recouvrement')),
                ('total_gratuite_ciblee', models.DecimalField(blank=True, decimal_places=2, max_digits=22, null=True, verbose_name='Total Gratuité Ciblée')),
                ('total_cas_sociaux', models.IntegerField(blank=True, null=True, verbose_name='Total Cas Sociaux')),
                ('total_acte_reduit', models.DecimalField(blank=True, decimal_places=2, max_digits=22, null=True, verbose_name='Total Acte Réduit')),
                ('total_cmu', models.DecimalField(blank=True, decimal_places=2, max_digits=22, null=True, verbose_name='Total CMU')),
                ('total_hors_cmu', models.DecimalField(blank=True, decimal_places=2, max_digits=22, null=True, verbose_name='Total Hors CMU')),
                ('date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('deleted_at', models.DateField(auto_now=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('centre_sante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dash.servicesanitaire')),
            ],
        ),
        migrations.AddField(
            model_name='servicesanitaire',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dash.typeservicesanitaire'),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_patient', models.CharField(blank=True, editable=False, max_length=225, unique=True)),
                ('nom', models.CharField(blank=True, max_length=225)),
                ('prenoms', models.CharField(blank=True, max_length=225)),
                ('contact', models.CharField(blank=True, max_length=225)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=225)),
                ('lieu_naissance', models.CharField(blank=True, max_length=200, null=True)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=10)),
                ('nationalite', models.CharField(blank=True, max_length=200)),
                ('profession', models.CharField(blank=True, max_length=200, null=True)),
                ('nbr_enfants', models.PositiveIntegerField(blank=True, default=0)),
                ('groupe_sanguin', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=20, null=True)),
                ('niveau_etude', models.CharField(blank=True, max_length=500, null=True)),
                ('employeur', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('quartier', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, choices=[('Admis', 'Admis'), ('Sorti', 'Sorti'), ('Transféré', 'Transféré'), ('Décédé', 'Décédé'), ('Sous observation', 'Sous observation'), ('Sous traitement', 'Sous traitement'), ('Chirurgie programmée', 'Chirurgie programmée'), ('En chirurgie', 'En chirurgie'), ('Récupération post-opératoire', 'Récupération post-opératoire'), ('USI', 'Unité de soins intensifs (USI)'), ('Urgence', 'Urgence'), ('Consultation externe', 'Consultation externe'), ('Réhabilitation', 'Réhabilitation'), ('En attente de diagnostic', 'En attente de diagnostic'), ('Traitement en cours', 'Traitement en cours'), ('Suivi programmé', 'Suivi programmé'), ('Consultation', 'Consultation'), ('Sortie en attente', 'Sortie en attente'), ('Isolement', 'Isolement'), ('Ambulantoire', 'Ambulantoire'), ('Aucun', 'Aucun')], default='Aucun', max_length=100, null=True)),
                ('gueris', models.BooleanField(default=False)),
                ('decede', models.BooleanField(default=False)),
                ('cascontact', models.ManyToManyField(blank=True, to='dash.patient')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dash.employee')),
                ('hopital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dash.servicesanitaire')),
            ],
            options={
                'ordering': ['-created_at'],
                'permissions': (('voir_patient', 'Peut voir patient'),),
            },
        ),
        migrations.CreateModel(
            name='HistoricalPatient',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('code_patient', models.CharField(blank=True, db_index=True, editable=False, max_length=225)),
                ('nom', models.CharField(blank=True, max_length=225)),
                ('prenoms', models.CharField(blank=True, max_length=225)),
                ('contact', models.CharField(blank=True, max_length=225)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=225)),
                ('lieu_naissance', models.CharField(blank=True, max_length=200, null=True)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=10)),
                ('nationalite', models.CharField(blank=True, max_length=200)),
                ('profession', models.CharField(blank=True, max_length=200, null=True)),
                ('nbr_enfants', models.PositiveIntegerField(blank=True, default=0)),
                ('groupe_sanguin', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=20, null=True)),
                ('niveau_etude', models.CharField(blank=True, max_length=500, null=True)),
                ('employeur', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('quartier', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, choices=[('Admis', 'Admis'), ('Sorti', 'Sorti'), ('Transféré', 'Transféré'), ('Décédé', 'Décédé'), ('Sous observation', 'Sous observation'), ('Sous traitement', 'Sous traitement'), ('Chirurgie programmée', 'Chirurgie programmée'), ('En chirurgie', 'En chirurgie'), ('Récupération post-opératoire', 'Récupération post-opératoire'), ('USI', 'Unité de soins intensifs (USI)'), ('Urgence', 'Urgence'), ('Consultation externe', 'Consultation externe'), ('Réhabilitation', 'Réhabilitation'), ('En attente de diagnostic', 'En attente de diagnostic'), ('Traitement en cours', 'Traitement en cours'), ('Suivi programmé', 'Suivi programmé'), ('Consultation', 'Consultation'), ('Sortie en attente', 'Sortie en attente'), ('Isolement', 'Isolement'), ('Ambulantoire', 'Ambulantoire'), ('Aucun', 'Aucun')], default='Aucun', max_length=100, null=True)),
                ('gueris', models.BooleanField(default=False)),
                ('decede', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dash.employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('hopital', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dash.servicesanitaire')),
            ],
            options={
                'verbose_name': 'historical patient',
                'verbose_name_plural': 'historical patients',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEmployee',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=100, null=True)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default='+22507070707', max_length=20, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('job_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Titre du poste')),
                ('slug', models.SlugField(blank=True, editable=False, help_text='slug field', null=True, verbose_name='slug ')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('district', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dash.districtsanitaire', verbose_name='District Sanitaire')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dash.servicesanitaire', verbose_name='Service Sanitaire')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical employee',
                'verbose_name_plural': 'historical employees',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HealthRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('poles', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dash.polesregionaux')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dash.servicesanitaire', verbose_name='Service Sanitaire'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='districtsanitaire',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dash.healthregion'),
        ),
    ]
