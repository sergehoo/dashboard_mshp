services:

  mshpsihweb:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/dashboardmshp-app/
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - ./.env
    restart: always
    depends_on:
      - dashboardDB
    networks:
      - default
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      # Router HTTPS principal
      - "traefik.http.routers.mshpsih.rule=Host(`dashbord.mshpcmu.ci`)"
      - "traefik.http.routers.mshpsih.entrypoints=websecure"
      - "traefik.http.routers.mshpsih.tls.certresolver=lets"
      # Service applicatif (port interne Gunicorn)
      - "traefik.http.services.mshpsih.loadbalancer.server.port=8000"
      # (Optionnel) compress + headers de base
      - "traefik.http.middlewares.mshpsih-compress.compress=true"
      - "traefik.http.middlewares.mshpsih-sec.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.mshpsih-sec.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.mshpsih-sec.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.mshpsih-sec.headers.frameDeny=true"
      - "traefik.http.middlewares.mshpsih-sec.headers.contentTypeNosniff=true"
      - "traefik.http.routers.mshpsih.middlewares=mshpsih-compress,mshpsih-sec"

    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/healthz || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  dashboardDB:
    image: postgis/postgis:16-3.4
    platform: linux/amd64
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - default

  adminersih:
    image: adminer
    restart: always
    networks:
      - default
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`sihdb.afriqconsulting.org`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls=true"
      - "traefik.http.routers.adminer.tls.certresolver=lets"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - "traefik.docker.network=proxy"
      # (Optionnel recommandé) protéger Adminer par BasicAuth :
      # - "traefik.http.middlewares.adminer-auth.basicauth.users=user:$$2y$$05$$hash_bcrypt_ici"
      # - "traefik.http.routers.adminer.middlewares=adminer-auth"

networks:
  default:
  proxy:
    external: true

volumes:
  traefik_letsencrypt: {}
  pgdata:
    driver: local
  static_volume:
  media_volume:
#services:
#
#  dashboardsihdweb:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - 5292:8000  # port du server : port de l'application
#    volumes:
#      - .:/dashboardmshp-app/
#    env_file:
#      - ./.env
#    restart: always
#    depends_on:
#      - dashboardDB
#
#  dashboardDB:
#    image: postgis/postgis:16-3.4
#    platform: linux/amd64
#    restart: always
#    environment:
#      - POSTGRES_USER=ogah
#      - POSTGRES_PASSWORD=NEWdimension_MAC@24
#      - POSTGRES_DB=dashboard
#      - PG_DATA=/data
#    volumes:
#      - pgdata:/var/lib/postgresql/data
#
#  nginx:
#    image: nginx:latest
#    container_name: nginx-proxy
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#      - ./certs:/etc/nginx/certs
#    networks:
#      - dashboardsih_default
#
#  adminersih:
#    image: adminer
#    restart: always
#    ports:
#      - 6082:8080
#    networks:
#      - dashboardsih_default
#
#networks:
#  dashboardsih_default:
#    external: true
#
#volumes:
#  pgdata:
#    driver: local
#  static_volume:
#  media_volume: